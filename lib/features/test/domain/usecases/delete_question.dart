 import '../failures/test_failures.dart'; import 'package:dartz/dartz.dart'; import '../../../../core/classes/usecase.dart'; import '../repositories/test_repository.dart'; class DeleteQuestionUsecase extends UseCase<DeleteQuestionUsecaseResult, DeleteQuestionUsecaseParams> { const DeleteQuestionUsecase(this.testRepository); final TestRepository testRepository; @override Future<Either<TestFailure, DeleteQuestionUsecaseResult>> call(params) async { return testRepository.deleteQuestion(params); } } class DeleteQuestionUsecaseParams extends Params { const DeleteQuestionUsecaseParams(); } class DeleteQuestionUsecaseResult extends Response { const DeleteQuestionUsecaseResult(); }
