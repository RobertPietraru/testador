  import 'package:dartz/dartz.dart'; import '../../../../../core/classes/usecase.dart'; import '../../failures/quiz_failures.dart'; import '../../repositories/quiz_repository.dart'; class CreateSessionUsecase extends UseCase<CreateSessionUsecaseResult, CreateSessionUsecaseParams> { const CreateSessionUsecase(this.quizRepository); final QuizRepository quizRepository; @override Future<Either<QuizFailure, CreateSessionUsecaseResult>> call(params) async { return quizRepository.createSession(params); } } class CreateSessionUsecaseParams extends Params { const CreateSessionUsecaseParams(); } class CreateSessionUsecaseResult extends Response { const CreateSessionUsecaseResult(); }
