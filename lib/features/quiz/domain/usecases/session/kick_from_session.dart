  import 'package:dartz/dartz.dart'; import '../../../../../core/classes/usecase.dart'; import '../../failures/quiz_failures.dart'; import '../../repositories/quiz_repository.dart'; class KickFromSessionUsecase extends UseCase<KickFromSessionUsecaseResult, KickFromSessionUsecaseParams> { const KickFromSessionUsecase(this.quizRepository); final QuizRepository quizRepository; @override Future<Either<QuizFailure, KickFromSessionUsecaseResult>> call(params) async { return quizRepository.kickFromSession(params); } } class KickFromSessionUsecaseParams extends Params { const KickFromSessionUsecaseParams(); } class KickFromSessionUsecaseResult extends Response { const KickFromSessionUsecaseResult(); }
