  import 'package:dartz/dartz.dart'; import '../../../../../core/classes/usecase.dart'; import '../../failures/quiz_failures.dart'; import '../../repositories/quiz_repository.dart'; class GoToNextQuestionUsecase extends UseCase<GoToNextQuestionUsecaseResult, GoToNextQuestionUsecaseParams> { const GoToNextQuestionUsecase(this.quizRepository); final QuizRepository quizRepository; @override Future<Either<QuizFailure, GoToNextQuestionUsecaseResult>> call(params) async { return quizRepository.goToNextQuestion(params); } } class GoToNextQuestionUsecaseParams extends Params { const GoToNextQuestionUsecaseParams(); } class GoToNextQuestionUsecaseResult extends Response { const GoToNextQuestionUsecaseResult(); }
