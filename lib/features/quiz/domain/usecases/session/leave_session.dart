  import 'package:dartz/dartz.dart'; import '../../../../../core/classes/usecase.dart'; import '../../failures/quiz_failures.dart'; import '../../repositories/quiz_repository.dart'; class LeaveSessionUsecase extends UseCase<LeaveSessionUsecaseResult, LeaveSessionUsecaseParams> { const LeaveSessionUsecase(this.quizRepository); final QuizRepository quizRepository; @override Future<Either<QuizFailure, LeaveSessionUsecaseResult>> call(params) async { return quizRepository.leaveSession(params); } } class LeaveSessionUsecaseParams extends Params { const LeaveSessionUsecaseParams(); } class LeaveSessionUsecaseResult extends Response { const LeaveSessionUsecaseResult(); }
