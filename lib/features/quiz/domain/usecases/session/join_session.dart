  import 'package:dartz/dartz.dart'; import '../../../../../core/classes/usecase.dart'; import '../../failures/quiz_failures.dart'; import '../../repositories/quiz_repository.dart'; class JoinSessionUsecase extends UseCase<JoinSessionUsecaseResult, JoinSessionUsecaseParams> { const JoinSessionUsecase(this.quizRepository); final QuizRepository quizRepository; @override Future<Either<QuizFailure, JoinSessionUsecaseResult>> call(params) async { return quizRepository.joinSession(params); } } class JoinSessionUsecaseParams extends Params { const JoinSessionUsecaseParams(); } class JoinSessionUsecaseResult extends Response { const JoinSessionUsecaseResult(); }
